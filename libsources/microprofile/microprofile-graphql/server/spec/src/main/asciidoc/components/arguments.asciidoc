//
// Copyright (c) 2020 Contributors to the Eclipse Foundation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

[[arguments]]
=== Arguments

Arguments can exist for both queries and mutations and are generally represented as method parameters in Java code.

For example:

.Basic Argument Example
[source,java,numbered]
----
@Query
public List<SuperHero> getHeroesAt(@Name("location") String location) { //...
----

In this example, `location` is an argument that the client must provide when invoking the `getHeroesAt` query.

Note that abstract classes, interfaces or generic types other than subtypes of `java.util.Collection` (such as
`java.util.List` or `java.util.Set`) are not allowed to be specified as arguments. Implementations may allow additional
types (such as `java.util.Map`), but the behavior for these types of arguments are undefined.

==== Default Values

It is possible to specify a default value for query or mutation arguments so that the client does not need to specify a
value. This is done via the `@DefaultValue` annotation. Read more about this in the <<default_values>> section.